services:
  #container for the postgresql
  daruma_db:
    image: postgres
    restart: always
    # makes this container visible on a host port
    ports:
      - "5432:5432"
    environment:
      # this is the user for the healthcheck
      PGUSER: postgres
      POSTGRES_PASSWORD: admin123
    volumes:
      # creates the tables
      # TODO: use a custom database, stop using default
      - ./src/main/resources/db/00_db_init.sql:/docker-entrypoint-initdb.d/00_db_init.sql
      # populates tables with default data
      - ./src/main/resources/db/01_populate_tables.sql:/docker-entrypoint-initdb.d/01_populate_tables.sql
      - ./src/main/resources/db/02_restart_sequences.sql:/docker-entrypoint-initdb.d/02_restart_sequences.sql
      # persists data between containers
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 10s

  daruma_api:
    image: eclipse-temurin:21-alpine
    restart: always
    # makes this container visible on a host port
    ports:
      - "8080:8080"
    # copies built jar into the container
    volumes:
      - "./target/Daruma-0.0.1-SNAPSHOT.jar:/app.jar"
    # runs the jar with the docker spring profile to set the correct datasource URL
    command: ["java", "-jar", "-Dspring.profiles.active=docker", "/app.jar"]
    depends_on:
      daruma_db:
        condition: service_healthy

volumes:
  #this volume will mirror all database information into the host machine, so it can persist between container runs/versions/updates etc
  database:
    name: daruma_db